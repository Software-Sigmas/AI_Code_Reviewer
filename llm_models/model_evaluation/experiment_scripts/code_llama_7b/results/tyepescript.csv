id,name,explanation,code
1,add,"A simple utility to sum two numbers. Usage: add(5, 3) would return 8.","// Adds two numbers together and returns the sum.
function add(a: number, b: number): number {
return a + b;
}"
2,isPalindrome,Determines if a string is the same forwards and backwards. Usage: isPalindrome('radar') would return true.,"// Checks if a given string is a palindrome.
function isPalindrome(str: string): boolean {
const reversed = str.split('').reverse().join('');
return str === reversed;
}"
3,getFirstElement,"Retrieves the first element from an array without modifying the array. Usage: getFirstElement([1, 2, 3]) would return 1.","// Gets the first element from an array if it exists.
function getFirstElement<T>(array: T[]): T | undefined {
  return array.length > 0 ? array[0] : undefined;
}"
4,greet,"Prints a greeting message to the console. Usage: greet('Alice') would print Hello, Alice! to the console.","// Sends a greeting to the console with a specified name.
function greet(name: string): void {
console.log(Hello, ${name}!);
}"
5,factorial,Calculates the factorial of a number recursively. Usage: factorial(5) would return 120.,"// Calculates the factorial of a number using recursion.
function factorial(n: number): number {
if (n <= 1) {
return 1;
}
return n * factorial(n - 1);
}"
6,isEven,A predicate function that checks if a number is even. Usage: isEven(4) would return true.,"// Checks if a number is even.
function isEven(num: number): boolean {
  return num % 2 === 0;
}"
7,compact,"Removes falsy values (null or undefined) from an array. Usage: compact([0, 1, null, 2, undefined, 3]) would return [0, 1, 2, 3]. Note: 0 is considered a falsy value in JavaScript but is not removed by this function, demonstrating TypeScript's type guards in the filter predicate.","// Filters out null or undefined elements from an array.
function compact<T>(array: Array<T | null | undefined>): T[] {
  return array.filter((element): element is T => element != null);
}"
8,max,Finds the maximum of two numbers.,"function max(a: number, b: number): number { return a > b ? a : b; }"
9,min,Finds the minimum of two numbers.,"function min(a: number, b: number): number { return a < b ? a : b; }"
10,concatStrings,Concatenates two strings.,"function concatStrings(a: string, b: string): string { return a + b; }"
11,arrayLength,Returns the length of an array.,function arrayLength<T>(array: T[]): number { return array.length; }
12,isOdd,Checks if a number is odd.,function isOdd(num: number): boolean { return num % 2 !== 0; }
13,reverseArray,Reverses an array.,function reverseArray<T>(array: T[]): T[] { return array.reverse(); }
14,capitalize,Capitalizes the first letter of a string.,function capitalize(str: string): string { return str.charAt(0).toUpperCase() + str.slice(1);}
15,isDivisibleBy,Checks if a number is divisible by another number.,"function isDivisibleBy(num: number, divisor: number): boolean { return num % divisor === 0; }"
16,square,Calculates the square of a number.,function square(num: number): number { return num * num; }
17,isStringEmpty,Checks if a string is empty.,function isStringEmpty(str: string): boolean { return str === ''; }
18,getLastElement,Retrieves the last element from an array.,function getLastElement<T>(array: T[]): T | undefined { return array.length > 0 ? array[array.length - 1] : undefined; }
19,removeElement,Removes an element from an array by index.,"function removeElement<T>(array: T[], index: number): T[] { return array.filter((_, i) => i !== index); }"
20,sumArray,Sums all numbers in an array.,"function sumArray(numbers: number[]): number { return numbers.reduce((a, b) => a + b, 0); }"
21,isInArray,Checks if an element is present in an array.,"function isInArray<T>(array: T[], element: T): boolean { return array.includes(element); }"
22,squareRoot,Calculates the square root of a number.,function squareRoot(num: number): number { return Math.sqrt(num); }
23,repeatString,Repeats a string a given number of times.,"function repeatString(str: string, count: number): string { return str.repeat(count); }"
24,mergeArrays,Merges two arrays into one.,"function mergeArrays<T>(array1: T[], array2: T[]): T[] { return [...array1, ...array2]; }"
25,areArraysEqual,Checks if two arrays are equal (shallow comparison).,"function areArraysEqual<T>(array1: T[], array2: T[]): boolean { return array1.length === array2.length && array1.every((value, index) => value === array2[index]); }"
26,toggleBoolean,Toggles a boolean value.,function toggleBoolean(value: boolean): boolean { return !value; }
27,generateRandomNumber,Generates a random number between two values.,"function generateRandomNumber(min: number, max: number): number { return Math.floor(Math.random() * (max - min + 1)) + min; }"
28,randomChoice,Picks a random element from an array.,function randomChoice<T>(array: T[]): T { return array[Math.floor(Math.random() * array.length)]; }
29,filterTruthy,Filters out falsy values from an array.,function filterTruthy<T>(array: T[]): T[] { return array.filter(Boolean); }
30,toBoolean,Converts a value to a boolean.,function toBoolean(value: any): boolean { return Boolean(value); }
31,roundNumber,Rounds a number to the nearest integer.,function roundNumber(num: number): number { return Math.round(num); }
32,truncateString,Truncates a string to a specified length.,"function truncateString(str: string, length: number): string { return str.slice(0, length); }"
33,sumByProperty,Sums the values of a specific property in an array of objects.,"function sumByProperty<T>(array: T[], prop: keyof T): number { return array.reduce((acc, item) => acc + Number(item[prop]), 0); }"
34,getRandomInt,Generates a random integer between two values (inclusive).,"function getRandomInt(min: number, max: number): number { return Math.floor(Math.random() * (max - min + 1)) + min; }"
35,flattenArray,Flattens a multi-dimensional array into a single-dimensional array.,function flattenArray<T>(array: T[][]): T[] { return [].concat(...array); }
36,countOccurrences,Counts the occurrences of a specific value in an array.,"function countOccurrences<T>(array: T[], value: T): number { return array.filter(item => item === value).length; }"
37,distanceBetweenPoints,Calculates the distance between two points in 2D space.,"function distanceBetweenPoints(x1: number, y1: number, x2: number, y2: number): number { return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)); }"
38,shuffleArray,Shuffles the elements of an array randomly.,function shuffleArray<T>(array: T[]): T[] { return array.sort(() => Math.random() - 0.5); }
39,isPrime,Checks if a number is a prime number.,"function isPrime(num: number): boolean { for (let i = 2, s = Math.sqrt(num); i <= s; i++) if (num % i === 0) return false; return num > 1; }"
40,deepClone,Creates a deep clone of an object.,function deepClone<T>(obj: T): T { return JSON.parse(JSON.stringify(obj)); }
41,getRandomElement,Gets a random element from an array.,function getRandomElement<T>(array: T[]): T { return array[Math.floor(Math.random() * array.length)]; }
42,toTitleCase,Converts a string to title case (each word capitalized).,"function toTitleCase(str: string): string { return str.replace(/\w\S*/g, (txt) => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()); }"
43,isInteger,Checks if the value is an integer.,function isInteger(value: any): boolean { return Number.isInteger(value); }
44,chunkArray,Splits an array into chunks of a specified size.,"function chunkArray<T>(array: T[], size: number): T[][] { return Array.from({ length: Math.ceil(array.length / size) }, (v, i) => array.slice(i * size, i * size + size)); }"
45,uniqueElements,Returns a new array with unique elements from the given array.,function uniqueElements<T>(array: T[]): T[] { return [...new Set(array)]; }
46,isObject,Checks if the value is an object.,function isObject(value: any): boolean { return value !== null && typeof value === 'object'; }
47,digitSum,Calculates the sum of digits of a number.,"function digitSum(num: number): number { return num.toString().split('').reduce((acc, digit) => acc + Number(digit), 0); }"
48,capitalizeWords,Capitalizes the first letter of each word in a string.,"function capitalizeWords(str: string): string { return str.toLowerCase().replace(/\b\w/g, char => char.toUpperCase()); }"
49,padString,Pads a string with another string until it reaches the desired length.,"function padString(str: string, length: number, padWith: string = ' '): string { return str.padStart(length, padWith); }"
50,isValidEmail,Validates an email address format.,function isValidEmail(email: string): boolean { return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email); }